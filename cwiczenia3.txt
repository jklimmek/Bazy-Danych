2.	CREATE DATABASE postgis;


3.	CREATE EXTENSION postgis;


4.	CREATE TABLE budynki(id SERIAL, geometria geometry, nazwa VARCHAR);
	CREATE TABLE drogi(id SERIAL, geometria geometry, nazwa VARCHAR);
	CREATE TABLE punkty_informacyjne(id SERIAL, geometria geometry, nazwa VARCHAR);


5.	INSERT INTO budynki (geometria, nazwa) VALUES 
	('POLYGON((10.5 4, 10.5 1.5, 8 1.5, 8 4, 10.5 4))', 'BuildingA'),
       	('POLYGON((6 7, 6 5, 4 5, 4 7, 6 7))', 'BuildingB'),
       	('POLYGON((5 8, 5 6, 3 6, 3 8, 5 8))', 'BuildingC'),
       	('POLYGON((10 9, 10 8, 9 8, 9 9, 10 9))', 'BuildingD'),
       	('POLYGON((2 2, 2 1, 1 1, 1 2, 2 2))', 'BuildingF');

	INSERT INTO punkty_informacyjne (geometria, nazwa) VALUES 
	('POINT(1 3.5)', 'G'),
       	('POINT(5.5 1.5)', 'H'),
       	('POINT(9.5 6)', 'I'),
       	('POINT(6.5 6)', 'J'),
       	('POINT(6 9.5)', 'K');
       
	INSERT INTO drogi (geometria, nazwa) VALUES 
	('LINESTRING(0 4.5, 12 4.5)', 'RoadX'),
       	('LINESTRING(7.5 0, 7.5 10.5)', 'RoadY');
       

6.	SELECT SUM(ST_Length(geometria)) FROM drogi;

	SELECT ST_AsEWKT(geometria), ST_Area(geometria), ST_Perimeter(geometria) FROM budynki WHERE nazwa='BuildingA';

	SELECT nazwa, ST_Area(geometria) FROM budynki ORDER BY nazwa

	SELECT nazwa, ST_Perimeter(geometria) FROM budynki ORDER BY ST_Area(geometria) DESC LIMIT 2;

	SELECT ST_Distance(budynki.geometria, punkty_informacyjne.geometria) FROM budynki, punkty_informacyjne WHER punkty_informacyjne.nazwa='G' AND budynki.nazwa='BuildingC';

	SELECT ST_Area(g) FROM (SELECT ST_Intersection(ST_Buffer((SELECT geometria FROM budynki WHERE nazwa='BuildingB'), 0.5), (SELECT geometria FROM budynki WHERE nazwa='BuildingC')) AS select1) AS res;

	SELECT budynki.nazwa FROM budynki WHERE ST_X(ST_Centroid(budynki.geometria)) > 4.5;

	SELECT ST_Area((SELECT geometria FROM budynki WHERE nazwa='BuildingC'))+ST_Area('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')-2*ST_Area(ST_Intersection((SELECT geometria FROM budynki WHERE nazwa='BuildingC'), 'POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))'));
	